syntax = "proto3";

package raw_material;
option java_package = "com.example.raw_material";
option java_multiple_files = true;



// RAW MATERIAL MODEL
message RawMaterial {
  string Id = 1;
  string Name = 2;
  int32 Quantity = 3;
  int32 width = 4;
  int32 length = 5;
  int32 depth = 6;
}



// CREATE RAW MATERIALS
message CreateRawMaterialRequest {
  RawMaterial rawMaterial = 1;
}

message CreateRawMaterialResponse {
  RawMaterial rawMaterial = 1;
}



// GET RAW MATERIALS
message RawMaterialRequest {
  // needs to be empty
}

message RawMaterialResponse {
  RawMaterial rawMaterial = 1;
}



// GET RAW MATERIAL BY ID
message GetRawMaterialByIdRequest {
  string rawMaterialId = 1;
}

message GetRawMaterialByIdResponse {
  RawMaterial rawMaterial = 1;
}



// Update RAW MATERIAL BY ID
message UpdateRawMaterialByIdRequest {
  RawMaterial rawMaterial = 1;
}

message UpdateRawMaterialByIdResponse {
  RawMaterial rawMaterial = 1;
}



// GET RAW MATERIAL BY ID
message DeleteRawMaterialByIdRequest {
  string rawMaterialId = 1;
}

message DeleteRawMaterialByIdResponse {
  string result = 1;
}



// SERVICE DEFINITION
service RawMaterialService {

  // Unary communication
  rpc CreateRawMaterial(CreateRawMaterialRequest)
      returns (CreateRawMaterialResponse) {};

  // Server streaming
  rpc GetRawMaterials(RawMaterialRequest)
      returns (stream RawMaterialResponse) {};

  // Unary communication
  rpc GetRawMaterialById(GetRawMaterialByIdRequest)
      returns (GetRawMaterialByIdResponse) {};

  // Unary communication
  rpc UpdateRawMaterialById(UpdateRawMaterialByIdRequest)
      returns (UpdateRawMaterialByIdResponse) {};

  // Unary communication
  rpc DeleteRawMaterialById(DeleteRawMaterialByIdRequest)
      returns (DeleteRawMaterialByIdResponse) {};
}
